@book{alma991001697099707681,
keywords = {Procesamiento electrónico de datos -- Procesamiento distribuido},
language = {eng},
lccn = {2008274939},
author = {Kshemkalyani, Ajay D. and Singhal, Mukesh},
address = {Cambridge ;},
booktitle = {Distributed computing : principles, algorithms, and systems},
isbn = {9780521876346},
publisher = {Cambridge University Press},
title = {Distributed computing : principles, algorithms, and systems },
year = {2008},
}

@article{RajRajendraK.1991EAgp,
issn = {0038-0644},
journal = {Software, practice & experience},
keywords = {Software},
language = {eng},
number = {1},
abstract = {Emerald is a general‐purpose language with aspects of traditional object‐oriented languages, such as Smalltalk, and data type languages, such as Modula‐2 and Ada. It is strongly typed with a non‐traditional object model and type system that emphasize types, allow separation of typing and implementation, and provide the flexibility of polymorphism and subtyping with compile‐time checking. This paper describes the Emerald language and its programming methodology. We give examples that demonstrate Emerald's features, and compare and contrast the Emerald approach to programming with the approaches used in other similar languages.},
author = {Raj, Rajendra K. and Tempero, Ewan and Levy, Henry M. and Black, Andrew P. and Hutchinson, Norman C. and Jul, Eric},
address = {New York},
copyright = {Copyright © 1991 John Wiley & Sons, Ltd},
pages = {91-118},
publisher = {John Wiley & Sons, Ltd},
title = {Emerald: A general-purpose programming language},
volume = {21},
year = {1991},
}


@article{JulEric1988Fmit,
issn = {0734-2071},
journal = {ACM transactions on computer systems},
language = {eng},
number = {1},
abstract = {Emerald is an object-based language and system designed for the construction of distributed programs. An explicit goal of Emerald is support for object mobility; objects in Emerald can freely move within the system to take advantage of distribution and dynamically changing environments. We say that Emerald has fine-grained mobility because Emerald objects can be small data objects as well as process objects. Fine-grained mobility allows us to apply mobility in new ways but presents implementation problems as well. This paper discusses the benefits of tine-grained mobility, the Emerald language and run-time mechanisms that support mobility, and techniques for implementing mobility that do not degrade the performance of local operations. Performance measurements of the current implementation are included.},
author = {Jul, Eric and Levy, Henry and Hutchinson, Norman and Black, Andrew},
pages = {109-133},
publisher = {ACM},
title = {Fine-grained mobility in the Emerald system},
volume = {6},
year = {1988},
}



@inproceedings{BlackAndrew2007Tdot,
keywords = {Migration, Internal ; Eden ; Washington},
language = {eng},
abstract = {Emerald is an object-based programming language and system designed and implemented in the Department of Computer Science at the University of Washington in the early and mid-1980s. The goal of Emerald was to simplify the construction of distributed applications. This goal was reflected at every level of the system: its object structure, the programming language design, the compiler implementation, and the run-time support.
This paper describes the origins of the Emerald group, the forces that formed the language, the influences that Emerald has had on subsequent distributed systems and programming languages, and some of Emerald's more interesting technical innovations.},
author = {Black, Andrew and Hutchinson, Norman and Jul, Eric and Levy, Henry},
booktitle = {Proceedings of the third ACM SIGPLAN conference on history of programming languages},
isbn = {1595937668},
pages = {11-1-11-51},
publisher = {ACM},
title = {The development of the Emerald programming language},
year = {2007},
}

